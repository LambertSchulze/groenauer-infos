---
import { getCollection, getEntry } from "astro:content";
import type { CollectionEntry } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import DateTime from "../../components/DateTime.astro";
import CollectionLink from "../../components/CollectionLink.astro";
import Clock from "../../components/Icons/Clock.astro";
import Pin from "../../components/Icons/Pin.astro";
import People from "../../components/Icons/People.astro";

export async function getStaticPaths() {
	const events = await getCollection("termine");
	return events.map((event) => ({
		params: {
			slug: event.slug,
		},
		props: event,
	}));
}
type Props = CollectionEntry<"termine">;

const {
	data: {
		title,
		subtitle,
		date,
		dateEnd,
		time,
		timeEnd,
		price,
		image,
		place: { id: placeId },
		place_info,
		organiser,
		source,
		source_url,
	},
	body,
} = Astro.props;
const placeObject = await getEntry("orte", placeId);
const { Content } = await Astro.props.render();

const schemaData = {
		  "@context": "https://schema.org",
		  "@type": "Event",
		  "name": title + (subtitle ? (' - ' + subtitle) : ''),
		  "startDate": date + (time ? ('T' + time) : ''),
		  "endDate": dateEnd + (timeEnd ? ('T' + timeEnd) : ''),
		  "location": {
			"@type": "Place",
			"name": placeObject.data.name,
			"address": {
			  "@type": "PostalAddress",
			  "streetAddress": placeObject.data.address.street + ' ' + placeObject.data.address.house_number,
			  "addressLocality": placeObject.data.address.city,
			  "postalCode": placeObject.data.address.postal_code,
			  "addressCountry": "DE"
			}
		  },
		  "image": image,
		  "description": body,
		  "organizer": {
			"@type": "Organization",
			"name": organiser,
		  }
		}
---

<BaseLayout title={title}>
	<article class="mb-5">
		{
			subtitle ? (
				<hgroup class="my-5">
					<h1>{title}</h1>
					<p class="lead">{subtitle}</p>
				</hgroup>
			) : (
				<h1 class="my-5">{title}</h1>
			)
		}

		<dl>
			<dt class="fw-lighter">Wann?</dt>
			<dd>
				<Clock />&NonBreakingSpace;<DateTime
					date={date}
					dateEnd={dateEnd}
					time={time}
					timeEnd={timeEnd}
					dateStyle="full"
				/>
			</dd>
			<dt class="fw-lighter">Wo?</dt>
			<dd>
				<Pin />&NonBreakingSpace;<CollectionLink entry={placeObject} />
				{place_info && " (" + place_info + ")"}
			</dd>
			{
				price && (
					<>
						<dt class="fw-lighter">Preis</dt>
						<dd>{Number(price) ? price : "kostenlos"}</dd>
					</>
				)
			}
			{
				organiser && (
					<>
						<dt class="fw-lighter">Veranstalter</dt>
						<dd>{organiser}</dd>
					</>
				)
			}
		</dl>

		{image && <img src={image} alt="" class="img-fluid py-4" />}

		<section>
			<hr />
			<Content />
		</section>

		{
			source && (
				<footer>
					<hr />
					<small>
						<b>Quelle: </b>
						{source_url ? (
							<a href={source_url}>{source}</a>
						) : (
							{ source }
						)}
					</small>
				</footer>
			)
		}
	</article>

	<script type="application/ld+json" set:html={JSON.stringify(schemaData)} />	
</BaseLayout>

<style>
	article {
		display: grid;
		grid-template-columns: auto 1fr;
		grid-template-rows: auto 1fr auto;
		grid-template-areas:
			"header img"
			"list img"
			"body body"
			"img2 img2"
			"footer footer";
		column-gap: 1rem;
	}
	article * {
		grid-area: body;
	}
	article hgroup,
	article h1 {
		grid-area: header;
	}
	article img {
		grid-area: img;
		justify-self: center;
		max-width: 400px;
	}
	@media (max-width: 768px) {
		article img {
			grid-area: img2;
		}
	}
	article dl {
		grid-area: list;
	}
	article footer {
		grid-area: footer;
	}
</style>
