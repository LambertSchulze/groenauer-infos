---
import '../../node_modules/ol/ol.css';

type Props = {
    lon: number,
    lat: number,
    zoom?: number,
    marker?: boolean,
    title?: string;
    wrapperCSS?: string;
    style?: any;
}

const { lon, lat, zoom, marker, title, wrapperCSS, style } = Astro.props;
---

<div
    id="map"
    class={wrapperCSS}
    {style}
></div>


<script define:vars={{ lon, lat, zoom, marker }}>
  window.lon = lon;
  window.lat = lat;
  window.zoom = zoom ?? 13;
  window.marker = marker;
</script>

<script>
  import { Map, View } from 'ol';
  import Feature from 'ol/Feature';
  import Point from 'ol/geom/Point';
  import { OSM, Vector as VectorSource } from 'ol/source';
  import { Tile as TileLayer, Vector as VectorLayer, Image as ImageLayer } from 'ol/layer';
  import { fromLonLat } from 'ol/proj';
  import {Circle, Fill, Stroke, Style} from 'ol/style';

  const vectors = new VectorSource();

  new Map({
    target: 'map',
    layers: [
      new TileLayer({
        source: new OSM()
      }),
      new VectorLayer({
        source: vectors,
        style: new Style({
          image: new Circle({
            fill: new Fill({
              color: '#ffeeee'
            }),
            stroke: new Stroke({
              color: '#002222',
              width: 2.5,
            }),
            radius: 10
          }),
        })
      }),
    ],
    view: new View({
      center: fromLonLat([(window as any).lon, (window as any).lat]),
      zoom: (window as any).zoom,
    }),
  });

  if ((window as any).marker) {
    const geom = new Point(fromLonLat([(window as any).lon, (window as any).lat]));
    const feature = new Feature(geom);
    vectors.addFeature(feature);
  }

</script>

<style>
  #map {
    min-height: 350px;
  }
</style>